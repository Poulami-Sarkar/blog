---
title:  "Week8"
date:   2019-07-21 
categories: post
---

##Deliverables
1. Removing redundancies in OCR
2. Getting started with Slurm jobs

### Removing redundancies in OCR
One of the major problems faced while detecting a continuous ticker was the ensuring continuity and removal of incomplete words at the edges of the detected ticker.<br/>
Example:
<br/>
By setting the frame_skip (i.e the number of frames skipped before detecting next piece of ticker) value as 110 frames, and eliminating the first and the last words of each piece of detected text, a reasonable amount of continuity can be ensured. The value of frame_skip is channel specific and depends on the speed of the ticker for a particular channel. Since, the news videos I worked on are from DD News, I was able to hardcode this value. 

### Getting started with Slurm jobs
Slurm (Simple Linux Utility for Resource Management) is an open-source job scheduler that allocates compute resources on clusters for queued researcher defined jobs.

1. Allocating resources to the script
Allocating 5 CPUs and 12GB cpu-memory:<br/>
`#SBATCH -c 5`<br/>
`#SBATCH --mem-per-cpu=12G`<br/>
Allocating GPU:<br/>
`#SBATCH --gres=gpu:k40:2`<br/>

2. Final script:
```
#!/bin/bash
#SBATCH -N 5
#SBATCH -c 5
#SBATCH --gres=gpu:k40:2
#SBATCH --mem-per-cpu=12G
#SBATCH --time=0-24:00:00     # 30 minutes
#SBATCH --output=my.stdout
#SBATCH --mail-user=poulamirulz@gmail.com
#SBATCH --mail-type=ALL
#SBATCH --job-name="just_a_test"

# Put commands for executing job below this line
# This example is loading the default Python module and then
# writing out the version of Python
module load singularity/2.5.1
for month  in /mnt/rds/redhen/gallina/tv/2019/*; do
        for day in $month'/'*;do
                for f in $(ls -R $day | grep DD-News.*.mp4);do
                        date +"%T"
                        [ ! -f outputs/${f/mp4/ocr} ]  && echo $f $day'/' && singularity exec -B /mnt/rds/redhen/gallina/tv:/tv,`pwd`:/mnt ben-hin-ocr.img python3 /mnt/textdetection.py $f $day'/' 'hin+eng'
                        date +"%T"
                done
        done
done
echo "running OCR"
```