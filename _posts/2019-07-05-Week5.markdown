---
title:  "Week5"
date:   2019-07-07
categories: post
---

## Deliverables
1. Fromatting the output and saving the ticker to a .srt file and saving other text (non-ticker) to a textfile
2. Improving OCR accuracy using confidence
3. Eliminating garbage text
4. A prototype demo

## The .srt format
An SRT file is a subtitle file saved in the SubRip file format.
An SRT file consists of four parts:
1. The number of the caption frame in sequence
2. Beginning and end timecodes for when the caption frame should appear
3. The caption itself
4. A blank line to indicate the start of a new caption sequence
Example:
  hours:minutes:seconds,milliseconds – –> hours:minutes:seconds,milliseconds
  00:04:12,40 --> 00:05:11,30

## Using confidence
In my previous implementation, there were several instances where certain images gave a garbage output. Another new finding that I discovered was that some images gave me a better output when I colour inverted it and removed the noise while others did not. This was particularly beacuse some images had a dark background with white text and some had a light background with dark text colour. Hence, writing a general code that would work well for all images was proving to be quite troublesome. On suggestion from my mentors, I decided to use the confidence returned by tesseract4.0 in order to decide which of the two works better.
The results were as follows
![](/blog/assets/article_images/5.1.jpg)
Without color inversion: "IT HELPS TO IMPROVE PHYSICAL"
With color inversion: "leh ad he |"

Using confidence for finding out garbage recognitions was a total failure as almost all of the Hindi text was being recognized with a low confidene ranging between 10%-55% inspite of being accurately recognized.

## Demo
